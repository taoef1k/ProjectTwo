/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.cxrus.model.impl;

import com.cxrus.model.Articles;
import com.cxrus.model.ArticlesModel;
import com.cxrus.model.ArticlesSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Articles service. Represents a row in the &quot;AR_Articles&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.cxrus.model.ArticlesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ArticlesImpl}.
 * </p>
 *
 * @author mohdtaufik
 * @see ArticlesImpl
 * @see com.cxrus.model.Articles
 * @see com.cxrus.model.ArticlesModel
 * @generated
 */
@JSON(strict = true)
public class ArticlesModelImpl extends BaseModelImpl<Articles>
	implements ArticlesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a articles model instance should use the {@link com.cxrus.model.Articles} interface instead.
	 */
	public static final String TABLE_NAME = "AR_Articles";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "articlesId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "articleName", Types.VARCHAR },
			{ "articleTitle", Types.VARCHAR },
			{ "publishedDate", Types.TIMESTAMP },
			{ "categoryArticlesId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table AR_Articles (uuid_ VARCHAR(75) null,articlesId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,articleName VARCHAR(75) null,articleTitle VARCHAR(75) null,publishedDate DATE null,categoryArticlesId LONG)";
	public static final String TABLE_SQL_DROP = "drop table AR_Articles";
	public static final String ORDER_BY_JPQL = " ORDER BY articles.articlesId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AR_Articles.articlesId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.cxrus.model.Articles"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.cxrus.model.Articles"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.cxrus.model.Articles"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long ARTICLESID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Articles toModel(ArticlesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Articles model = new ArticlesImpl();

		model.setUuid(soapModel.getUuid());
		model.setArticlesId(soapModel.getArticlesId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setArticleName(soapModel.getArticleName());
		model.setArticleTitle(soapModel.getArticleTitle());
		model.setPublishedDate(soapModel.getPublishedDate());
		model.setCategoryArticlesId(soapModel.getCategoryArticlesId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Articles> toModels(ArticlesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Articles> models = new ArrayList<Articles>(soapModels.length);

		for (ArticlesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.cxrus.model.Articles"));

	public ArticlesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _articlesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setArticlesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _articlesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Articles.class;
	}

	@Override
	public String getModelClassName() {
		return Articles.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("articlesId", getArticlesId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("articleName", getArticleName());
		attributes.put("articleTitle", getArticleTitle());
		attributes.put("publishedDate", getPublishedDate());
		attributes.put("categoryArticlesId", getCategoryArticlesId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long articlesId = (Long)attributes.get("articlesId");

		if (articlesId != null) {
			setArticlesId(articlesId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String articleName = (String)attributes.get("articleName");

		if (articleName != null) {
			setArticleName(articleName);
		}

		String articleTitle = (String)attributes.get("articleTitle");

		if (articleTitle != null) {
			setArticleTitle(articleTitle);
		}

		Date publishedDate = (Date)attributes.get("publishedDate");

		if (publishedDate != null) {
			setPublishedDate(publishedDate);
		}

		Long categoryArticlesId = (Long)attributes.get("categoryArticlesId");

		if (categoryArticlesId != null) {
			setCategoryArticlesId(categoryArticlesId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getArticlesId() {
		return _articlesId;
	}

	@Override
	public void setArticlesId(long articlesId) {
		_articlesId = articlesId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getArticleName() {
		if (_articleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _articleName;
		}
	}

	@Override
	public void setArticleName(String articleName) {
		_articleName = articleName;
	}

	@JSON
	@Override
	public String getArticleTitle() {
		if (_articleTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _articleTitle;
		}
	}

	@Override
	public void setArticleTitle(String articleTitle) {
		_articleTitle = articleTitle;
	}

	@JSON
	@Override
	public Date getPublishedDate() {
		return _publishedDate;
	}

	@Override
	public void setPublishedDate(Date publishedDate) {
		_publishedDate = publishedDate;
	}

	@JSON
	@Override
	public long getCategoryArticlesId() {
		return _categoryArticlesId;
	}

	@Override
	public void setCategoryArticlesId(long categoryArticlesId) {
		_categoryArticlesId = categoryArticlesId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Articles.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Articles.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Articles toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Articles)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ArticlesImpl articlesImpl = new ArticlesImpl();

		articlesImpl.setUuid(getUuid());
		articlesImpl.setArticlesId(getArticlesId());
		articlesImpl.setGroupId(getGroupId());
		articlesImpl.setCompanyId(getCompanyId());
		articlesImpl.setUserId(getUserId());
		articlesImpl.setUserName(getUserName());
		articlesImpl.setCreateDate(getCreateDate());
		articlesImpl.setModifiedDate(getModifiedDate());
		articlesImpl.setArticleName(getArticleName());
		articlesImpl.setArticleTitle(getArticleTitle());
		articlesImpl.setPublishedDate(getPublishedDate());
		articlesImpl.setCategoryArticlesId(getCategoryArticlesId());

		articlesImpl.resetOriginalValues();

		return articlesImpl;
	}

	@Override
	public int compareTo(Articles articles) {
		long primaryKey = articles.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Articles)) {
			return false;
		}

		Articles articles = (Articles)obj;

		long primaryKey = articles.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ArticlesModelImpl articlesModelImpl = this;

		articlesModelImpl._originalUuid = articlesModelImpl._uuid;

		articlesModelImpl._originalGroupId = articlesModelImpl._groupId;

		articlesModelImpl._setOriginalGroupId = false;

		articlesModelImpl._originalCompanyId = articlesModelImpl._companyId;

		articlesModelImpl._setOriginalCompanyId = false;

		articlesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Articles> toCacheModel() {
		ArticlesCacheModel articlesCacheModel = new ArticlesCacheModel();

		articlesCacheModel.uuid = getUuid();

		String uuid = articlesCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			articlesCacheModel.uuid = null;
		}

		articlesCacheModel.articlesId = getArticlesId();

		articlesCacheModel.groupId = getGroupId();

		articlesCacheModel.companyId = getCompanyId();

		articlesCacheModel.userId = getUserId();

		articlesCacheModel.userName = getUserName();

		String userName = articlesCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			articlesCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			articlesCacheModel.createDate = createDate.getTime();
		}
		else {
			articlesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			articlesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			articlesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		articlesCacheModel.articleName = getArticleName();

		String articleName = articlesCacheModel.articleName;

		if ((articleName != null) && (articleName.length() == 0)) {
			articlesCacheModel.articleName = null;
		}

		articlesCacheModel.articleTitle = getArticleTitle();

		String articleTitle = articlesCacheModel.articleTitle;

		if ((articleTitle != null) && (articleTitle.length() == 0)) {
			articlesCacheModel.articleTitle = null;
		}

		Date publishedDate = getPublishedDate();

		if (publishedDate != null) {
			articlesCacheModel.publishedDate = publishedDate.getTime();
		}
		else {
			articlesCacheModel.publishedDate = Long.MIN_VALUE;
		}

		articlesCacheModel.categoryArticlesId = getCategoryArticlesId();

		return articlesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", articlesId=");
		sb.append(getArticlesId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", articleName=");
		sb.append(getArticleName());
		sb.append(", articleTitle=");
		sb.append(getArticleTitle());
		sb.append(", publishedDate=");
		sb.append(getPublishedDate());
		sb.append(", categoryArticlesId=");
		sb.append(getCategoryArticlesId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.cxrus.model.Articles");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articlesId</column-name><column-value><![CDATA[");
		sb.append(getArticlesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleName</column-name><column-value><![CDATA[");
		sb.append(getArticleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleTitle</column-name><column-value><![CDATA[");
		sb.append(getArticleTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishedDate</column-name><column-value><![CDATA[");
		sb.append(getPublishedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryArticlesId</column-name><column-value><![CDATA[");
		sb.append(getCategoryArticlesId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Articles.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Articles.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _articlesId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _articleName;
	private String _articleTitle;
	private Date _publishedDate;
	private long _categoryArticlesId;
	private long _columnBitmask;
	private Articles _escapedModel;
}